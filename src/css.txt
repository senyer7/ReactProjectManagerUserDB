@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: "Unbounded";
  src: url(/src/assets/fonts/Unbounded-Regular.ttf);
  font-display: swap;
}

* {
  box-sizing: border-box;
}

:root {
  --primary: #3b82f6;
  --primary-dark: #2563eb;
  --danger: #ef4444;
  --danger-dark: #dc2626;
  --success: #10b981;
  --success-dark: #059669;
  --gray-50: #f9fafb;
  --gray-100: #f3f4f6;
  --gray-200: #e5e7eb;
  --gray-300: #d1d5db;
  --gray-400: #9ca3af;
  --gray-500: #6b7280;
  --gray-600: #4b5563;
  --gray-700: #374151;
  --gray-800: #1f2937;
  --gray-900: #111827;
  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05);
  --radius: 8px;
  --radius-lg: 12px;
  --radius-xl: 16px;
}

body {
  font-family: "Unbounded", -apple-system, BlinkMacSystemFont, sans-serif;
  margin: 0;
  padding: 0;
  min-height: 100vh;
  background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
  color: var(--gray-700);
  line-height: 1.5;
  font-size: 14px;
}

/* ===== –û–°–ù–û–í–ù–û–ô –ö–û–ù–¢–ï–ô–ù–ï–† ===== */
.app-container {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

.main-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 1rem;
  gap: 1.5rem;
}

.content-area {
  flex: 1;
  display: flex;
  flex-direction: column;
}

@media (min-width: 1024px) {
  .main-content {
    flex-direction: row;
    padding: 1.5rem;
    align-items: flex-start;
  }

  .content-area {
    padding-left: 1.5rem;
    border-left: 1px solid var(--gray-200);
  }
}

/* ===== –ö–ù–û–ü–ö–ò ===== */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: none;
  padding: 0.625rem 1.25rem;
  border-radius: var(--radius);
  font-weight: 600;
  font-size: 0.875rem;
  cursor: pointer;
  transition: all 0.2s ease;
  text-decoration: none;
  gap: 0.5rem;
  white-space: nowrap;
}

.btn-primary {
  background: var(--primary);
  color: white;
  box-shadow: var(--shadow);
}

.btn-primary:hover {
  background: var(--primary-dark);
  transform: translateY(-1px);
  box-shadow: var(--shadow-lg);
}

.btn-danger {
  background: var(--danger);
  color: white;
  box-shadow: var(--shadow);
}

.btn-danger:hover {
  background: var(--danger-dark);
  transform: translateY(-1px);
  box-shadow: var(--shadow-lg);
}

.btn-secondary {
  background: white;
  color: var(--primary);
  border: 1px solid var(--gray-300);
  box-shadow: var(--shadow-sm);
}

.btn-secondary:hover {
  background: var(--gray-50);
  border-color: var(--primary);
  transform: translateY(-1px);
}

.btn-sm {
  padding: 0.5rem 1rem;
  font-size: 0.75rem;
}

/* ===== INPUT ===== */
.input-container {
  display: flex;
  flex-direction: column;
  gap: 0.375rem;
  margin-bottom: 1rem;
}

.input-label {
  font-size: 0.75rem;
  font-weight: 600;
  color: var(--gray-600);
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.input-field {
  width: 100%;
  padding: 0.75rem;
  border: 1px solid var(--gray-300);
  border-radius: var(--radius);
  background-color: white;
  color: var(--gray-800);
  font-family: inherit;
  font-size: 0.875rem;
  transition: all 0.2s ease;
}

.input-field:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.input-field::placeholder {
  color: var(--gray-400);
}

.textarea-field {
  resize: vertical;
  min-height: 100px;
  line-height: 1.5;
}

/* ===== MODAL ===== */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: 1rem;
  animation: fadeIn 0.2s ease-out;
}

.modal-dialog {
  border: none;
  border-radius: var(--radius-xl);
  padding: 0;
  background: transparent;
  max-width: 95vw;
  width: 100%;
  max-width: 400px;
}

.modal-dialog::backdrop {
  background: rgba(0, 0, 0, 0.5);
}

.modal-content {
  background: white;
  border-radius: var(--radius-xl);
  padding: 1.5rem;
  box-shadow: var(--shadow-lg);
  text-align: center;
}

/* ===== NEWPROJECT ===== */
.new-project-container {
  width: 100%;
  max-width: 500px;
  margin: 0 auto;
}

.new-project-actions {
  display: flex;
  justify-content: center;
  gap: 0.75rem;
  margin: 1.5rem 0;
  flex-wrap: wrap;
}

.new-project-form {
  background: white;
  padding: 1.5rem;
  border-radius: var(--radius-xl);
  box-shadow: var(--shadow);
  border: 1px solid var(--gray-200);
}

.error-notification {
  background: #fef2f2;
  border: 1px solid #fecaca;
  border-radius: var(--radius);
  padding: 1rem;
  margin-bottom: 1.5rem;
  text-align: center;
  animation: fadeIn 0.2s ease-out;
  font-size: 0.875rem;
}

/* ===== NEWTASK ===== */
.new-task-container {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  margin-bottom: 1.5rem;
  width: 100%;
}

.new-task-input {
  flex: 1;
  padding: 0.75rem;
  border: 1px solid var(--gray-300);
  border-radius: var(--radius);
  font-family: inherit;
  font-size: 0.875rem;
  transition: all 0.2s ease;
  background: white;
}

.new-task-input:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

@media (min-width: 640px) {
  .new-task-container {
    flex-direction: row;
    align-items: center;
  }
}

/* ===== NOPROJECTSELECTED ===== */
.no-project-container {
  text-align: center;
  padding: 2rem 1rem;
  max-width: 400px;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.no-project-image {
  width: 80px;
  height: 80px;
  margin: 0 auto 1.5rem;
  opacity: 0.7;
  filter: grayscale(100%);
}

.no-project-title {
  font-size: 1.25rem;
  font-weight: 700;
  color: var(--gray-800);
  margin-bottom: 0.75rem;
}

.no-project-description {
  color: var(--gray-500);
  margin-bottom: 1.5rem;
  line-height: 1.5;
  font-size: 0.875rem;
}

/* ===== PROJECTSIDEBAR ===== */
.project-sidebar {
  background: white;
  padding: 1.5rem;
  border-radius: var(--radius-xl);
  box-shadow: var(--shadow);
  border: 1px solid var(--gray-200);
  width: 100%;
  max-width: 280px;
  margin: 0 auto;
}

.project-sidebar-title {
  text-align: center;
  font-size: 1.25rem;
  font-weight: 700;
  color: var(--gray-800);
  margin-bottom: 1.5rem;
  padding-bottom: 0.75rem;
  border-bottom: 1px solid var(--gray-200);
}

.project-list {
  list-style: none;
  padding: 0;
  margin: 0;
}

.project-item {
  margin-bottom: 0.5rem;
}

.project-btn {
  width: 100%;
  text-align: left;
  padding: 0.75rem 1rem;
  border: none;
  border-radius: var(--radius);
  background: var(--gray-50);
  color: var(--gray-700);
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 0.875rem;
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.project-btn:hover {
  background: var(--primary);
  color: white;
  transform: translateY(-1px);
}

.project-btn.active {
  background: var(--primary);
  color: white;
  box-shadow: var(--shadow);
}

.project-btn::before {
  content: "üìÅ";
  font-size: 0.875rem;
}

/* ===== SELECTEDPROJECT ===== */
.selected-project {
  width: 100%;
  max-width: 600px;
  margin: 0 auto;
}

.project-header {
  text-align: center;
  border-bottom: 1px solid var(--gray-200);
  padding-bottom: 1.5rem;
  margin-bottom: 1.5rem;
}

.project-title {
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--gray-800);
  margin-bottom: 0.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

.project-title::before {
  content: "üìã";
  font-size: 1.25rem;
}

.project-date {
  color: var(--gray-500);
  font-size: 0.875rem;
  margin-bottom: 1rem;
}

.project-description {
  color: var(--gray-600);
  line-height: 1.5;
  margin-bottom: 1.5rem;
  font-size: 0.875rem;
  text-align: center;
}

.project-actions {
  display: flex;
  justify-content: center;
  gap: 0.75rem;
  flex-wrap: wrap;
  margin-bottom: 1rem;
}

/* ===== TASKS ===== */
.tasks-container {
  width: 100%;
  max-width: 500px;
  margin: 0 auto;
}

.tasks-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 1rem;
  padding-bottom: 0.5rem;
  border-bottom: 1px solid var(--gray-200);
}

.tasks-title {
  font-size: 1.125rem;
  font-weight: 700;
  color: var(--gray-800);
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.tasks-title::before {
  content: "‚úÖ";
  font-size: 1rem;
}

.tasks-count {
  background: var(--gray-100);
  color: var(--gray-600);
  padding: 0.25rem 0.5rem;
  border-radius: var(--radius);
  font-size: 0.75rem;
  font-weight: 600;
}

.tasks-list {
  list-style: none;
  padding: 0;
  margin: 0;
}

.task-item {
  background: white;
  padding: 0.875rem;
  border-radius: var(--radius);
  margin-bottom: 0.75rem;
  box-shadow: var(--shadow-sm);
  display: flex;
  justify-content: space-between;
  align-items: center;
  transition: all 0.2s ease;
  border-left: 3px solid var(--primary);
  animation: taskAppear 0.3s ease-out;
}

@keyframes taskAppear {
  from {
    opacity: 0;
    transform: translateY(8px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.task-item:hover {
  transform: translateY(-1px);
  box-shadow: var(--shadow);
}

.task-text {
  color: var(--gray-800);
  font-weight: 500;
  flex: 1;
  margin-right: 0.75rem;
  font-size: 0.875rem;
  line-height: 1.4;
}

.task-delete-btn {
  background: transparent;
  border: none;
  color: var(--danger);
  cursor: pointer;
  padding: 0.375rem;
  border-radius: var(--radius);
  transition: all 0.2s ease;
  font-size: 0.75rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.task-delete-btn:hover {
  background: #fef2f2;
  color: var(--danger-dark);
}

.no-tasks-message {
  text-align: center;
  color: var(--gray-400);
  padding: 2rem;
  font-style: italic;
  font-size: 0.875rem;
}

/* ===== AUTHOR FOOTER ===== */
.author-footer {
  background: var(--gray-50);
  padding: 1rem 0;
  margin-top: auto;
  text-align: center;
  width: 100%;
  border-top: 1px solid var(--gray-200);
}

.author-footer-content {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 1rem;
}

.author-info {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.375rem;
}

.copyright {
  font-size: 0.75rem;
  color: var(--gray-500);
  font-weight: 500;
}

.telegram-link {
  font-size: 0.75rem;
  color: var(--primary);
  text-decoration: none;
  font-weight: 500;
  transition: color 0.2s ease;
  display: flex;
  align-items: center;
  gap: 0.375rem;
}

.telegram-link:hover {
  color: var(--primary-dark);
  text-decoration: underline;
}

.telegram-link::before {
  content: "üì¢";
}

/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */
.notification {
  position: fixed;
  top: 1rem;
  right: 1rem;
  padding: 0.875rem 1.25rem;
  border-radius: var(--radius);
  color: white;
  font-weight: 600;
  z-index: 1001;
  animation: slideInRight 0.3s ease-out;
  box-shadow: var(--shadow-lg);
  font-size: 0.875rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.notification.success {
  background: var(--success);
}

.notification.error {
  background: var(--danger);
}

@keyframes slideInRight {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

/* –ê–Ω–∏–º–∞—Ü–∏–∏ */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.fade-in {
  animation: fadeIn 0.3s ease-out;
}

/* –£—Ç–∏–ª–∏—Ç—ã */
.text-center {
  text-align: center;
}
.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}

.mb-1 {
  margin-bottom: 0.25rem;
}
.mb-2 {
  margin-bottom: 0.5rem;
}
.mb-3 {
  margin-bottom: 0.75rem;
}
.mb-4 {
  margin-bottom: 1rem;
}
.mb-6 {
  margin-bottom: 1.5rem;
}

.mt-1 {
  margin-top: 0.25rem;
}
.mt-2 {
  margin-top: 0.5rem;
}
.mt-3 {
  margin-top: 0.75rem;
}
.mt-4 {
  margin-top: 1rem;
}
.mt-6 {
  margin-top: 1.5rem;
}

.p-1 {
  padding: 0.25rem;
}
.p-2 {
  padding: 0.5rem;
}
.p-3 {
  padding: 0.75rem;
}
.p-4 {
  padding: 1rem;
}

/* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å */
@media (max-width: 768px) {
  .main-content {
    flex-direction: column;
    padding: 1rem;
    gap: 1rem;
  }

  .content-area {
    padding-left: 0;
    border-left: none;
  }

  .project-sidebar {
    max-width: 100%;
    margin-bottom: 1.5rem;
  }

  .new-project-actions,
  .project-actions {
    flex-direction: column;
  }

  .new-project-actions button,
  .project-actions button {
    width: 100%;
  }

  .task-item {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.75rem;
  }

  .task-text {
    margin-right: 0;
    margin-bottom: 0.5rem;
  }

  .task-delete-btn {
    align-self: flex-end;
  }

  .author-info {
    flex-direction: column;
    gap: 0.375rem;
  }
}

@media (max-width: 640px) {
  .new-project-form {
    padding: 1.25rem;
  }

  .modal-dialog {
    padding: 1rem;
  }

  .project-title {
    font-size: 1.25rem;
  }

  .tasks-title {
    font-size: 1rem;
  }
}

/* –°—Ç–∏–ª–∏ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ */
.loading-spinner {
  border: 2px solid #f3f3f3;
  border-top: 2px solid var(--primary);
  border-radius: 50%;
  width: 16px;
  height: 16px;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è —Å–ø–∏—Å–∫–æ–≤ */
.compact-list {
  max-height: 400px;
  overflow-y: auto;
  scrollbar-width: thin;
  scrollbar-color: var(--gray-300) transparent;
}

.compact-list::-webkit-scrollbar {
  width: 4px;
}

.compact-list::-webkit-scrollbar-track {
  background: transparent;
}

.compact-list::-webkit-scrollbar-thumb {
  background: var(--gray-300);
  border-radius: 2px;
}

.compact-list::-webkit-scrollbar-thumb:hover {
  background: var(--gray-400);
}

/* –£–ª—É—á—à–µ–Ω–Ω–∞—è —á–∏—Ç–∞–µ–º–æ—Å—Ç—å –∏ –∫–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç—å */
.enhanced-text {
  line-height: 1.4;
  font-size: 0.875rem;
}

.enhanced-card {
  background: white;
  border-radius: var(--radius-lg);
  padding: 1.25rem;
  box-shadow: var(--shadow-sm);
  border: 1px solid var(--gray-200);
  transition: all 0.2s ease;
}

.enhanced-card:hover {
  box-shadow: var(--shadow);
  transform: translateY(-1px);
}
